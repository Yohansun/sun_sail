# -*- encoding:utf-8 -*-

desc "导出csv格式的订单及相关数据"
task :export_trades_and_deliver_bills => :environment do
  CSV.open("#{Rails.root}/trades.csv", "wb") do |csv|
    csv << ["_type", "trade_source_id", "seller_id", "seller_alipay_no", "seller_mobile", "seller_phone", "seller_name", "seller_email", "dispatched_at", "delivered_at", "cs_memo", "logistic_memo", "gift_memo", "invoice_type", "invoice_name", "invoice_content", "invoice_date", "invoice_number", "logistic_code", "logistic_waybill", "logistic_id", "logistic_name", "seller_confirm_deliver_at", "seller_confirm_invoice_at", "confirm_color_at", "confirm_check_goods_at", "confirm_receive_at", "request_return_at", "confirm_return_at", "confirm_refund_at", "promotion_fee", "splitted", "splitted_tid", "deliver_bill_printed_at", "logistic_printed_at", "has_split_deliver_bill", "had_not_stock", "tid", "status", "receiver_name", "receiver_mobile", "receiver_state", "receiver_city", "receiver_district", "receiver_address", "seller_memo", "buyer_nick", "created", "pay_time", "type", "title", "seller_nick", "payment", "total_fee", "has_color_info", "has_cs_memo", "has_unusual_state", "has_audited", "has_offline_refund", "modify_payment", "modify_payment_no", "modify_payment_at", "modify_payment_memo", "num", "num_iid", "buyer_message", "price", "seller_cod_fee", "discount_fee", "point_fee", "has_post_fee", "is_lgtype", "is_brand_sale", "is_force_wlb", "modified", "end_time", "alipay_id", "alipay_no", "alipay_url", "buyer_memo", "buyer_flag", "seller_flag", "buyer_area", "buyer_email", "has_yfx", "yfx_fee", "yfx_id", "has_buyer_message", "area_id", "credit_card_fee", "nut_feature", "shipping_type", "buyer_cod_fee", "express_agency_fee", "adjust_fee", "buyer_obtain_point_fee", "cod_fee", "trade_from", "alipay_warn_msg", "cod_status", "can_rate", "has_sent_send_logistic_rate_sms", "commission_fee", "trade_memo", "pic_path", "snapshot_url", "snapshot", "seller_rate", "buyer_rate", "real_point_fee", "post_fee", "buyer_alipay_no", "receiver_zip", "receiver_phone", "consign_time", "available_confirm_fee", "received_payment", "timeout_action_time", "is_3D", "promotion", "got_promotion", "sku_properties_name", "account_id", "forecast_seller_id", "service_logistic_id", "deliver_bills_count", "is_notified", "has_property_memos", "has_onsite_service", "has_refund_orders", "has_invoice_info", "auto_merged_once", "is_auto_dispatch", "is_auto_deliver", "news", "parent_id", "parent_type", "operator_id", "operator_name", "merged_trade_ids", "merged_by_trade_id", "mergeable_id", "is_locked", "batch_sort_num", "alipay_last_modified_time", "alipay_payment", "pay_type", "vender_id", "order_seller_price", "delivery_type", "order_state_remark", "return_order", "sop_stock_out_time", "order_id", "receive_date", "pay_service_type", "order_promotion_discount", "update_time", "site_type", "order_coupon_discount", "order_platform_discount", "end_user_id", "product_amount", "refund_amount", "refund_code", "apply_date", "refund_status", "custom_type", "main_trade_id"]
    Trade.unscoped.all.each do |trade|
      p trade.tid
      csv << [(trade._type rescue nil),(trade.trade_source_id rescue nil),(trade.seller_id rescue nil),(trade.seller_alipay_no rescue nil),(trade.seller_mobile rescue nil),(trade.seller_phone rescue nil),(trade.seller_name rescue nil),(trade.seller_email rescue nil),(trade.dispatched_at rescue nil),(trade.delivered_at rescue nil),(trade.cs_memo rescue nil),(trade.logistic_memo rescue nil),(trade.gift_memo rescue nil),(trade.invoice_type rescue nil),(trade.invoice_name rescue nil),(trade.invoice_content rescue nil),(trade.invoice_date rescue nil),(trade.invoice_number rescue nil),(trade.logistic_code rescue nil),(trade.logistic_waybill rescue nil),(trade.logistic_id rescue nil),(trade.logistic_name rescue nil),(trade.seller_confirm_deliver_at rescue nil),(trade.seller_confirm_invoice_at rescue nil),(trade.confirm_color_at rescue nil),(trade.confirm_check_goods_at rescue nil),(trade.confirm_receive_at rescue nil),(trade.request_return_at rescue nil),(trade.confirm_return_at rescue nil),(trade.confirm_refund_at rescue nil),(trade.promotion_fee rescue nil),(trade.splitted rescue nil),(trade.splitted_tid rescue nil),(trade.deliver_bill_printed_at rescue nil),(trade.logistic_printed_at rescue nil),(trade.has_split_deliver_bill rescue nil),(trade.had_not_stock rescue nil),(trade.tid rescue nil),(trade.status rescue nil),(trade.receiver_name rescue nil),(trade.receiver_mobile rescue nil),(trade.receiver_state rescue nil),(trade.receiver_city rescue nil),(trade.receiver_district rescue nil),(trade.receiver_address rescue nil),(trade.seller_memo rescue nil),(trade.buyer_nick rescue nil),(trade.created rescue nil),(trade.pay_time rescue nil),(trade.type rescue nil),(trade.title rescue nil),(trade.seller_nick rescue nil),(trade.payment rescue nil),(trade.total_fee rescue nil),(trade.has_color_info rescue nil),(trade.has_cs_memo rescue nil),(trade.has_unusual_state rescue nil),(trade.has_audited rescue nil),(trade.has_offline_refund rescue nil),(trade.modify_payment rescue nil),(trade.modify_payment_no rescue nil),(trade.modify_payment_at rescue nil),(trade.modify_payment_memo rescue nil),(trade.num rescue nil),(trade.num_iid rescue nil),(trade.buyer_message rescue nil),(trade.price rescue nil),(trade.seller_cod_fee rescue nil),(trade.discount_fee rescue nil),(trade.point_fee rescue nil),(trade.has_post_fee rescue nil),(trade.is_lgtype rescue nil),(trade.is_brand_sale rescue nil),(trade.is_force_wlb rescue nil),(trade.modified rescue nil),(trade.end_time rescue nil),(trade.alipay_id rescue nil),(trade.alipay_no rescue nil),(trade.alipay_url rescue nil),(trade.buyer_memo rescue nil),(trade.buyer_flag rescue nil),(trade.seller_flag rescue nil),(trade.buyer_area rescue nil),(trade.buyer_email rescue nil),(trade.has_yfx rescue nil),(trade.yfx_fee rescue nil),(trade.yfx_id rescue nil),(trade.has_buyer_message rescue nil),(trade.area_id rescue nil),(trade.credit_card_fee rescue nil),(trade.nut_feature rescue nil),(trade.shipping_type rescue nil),(trade.buyer_cod_fee rescue nil),(trade.express_agency_fee rescue nil),(trade.adjust_fee rescue nil),(trade.buyer_obtain_point_fee rescue nil),(trade.cod_fee rescue nil),(trade.trade_from rescue nil),(trade.alipay_warn_msg rescue nil),(trade.cod_status rescue nil),(trade.can_rate rescue nil),(trade.has_sent_send_logistic_rate_sms rescue nil),(trade.commission_fee rescue nil),(trade.trade_memo rescue nil),(trade.pic_path rescue nil),(trade.snapshot_url rescue nil),(trade.snapshot rescue nil),(trade.seller_rate rescue nil),(trade.buyer_rate rescue nil),(trade.real_point_fee rescue nil),(trade.post_fee rescue nil),(trade.buyer_alipay_no rescue nil),(trade.receiver_zip rescue nil),(trade.receiver_phone rescue nil),(trade.consign_time rescue nil),(trade.available_confirm_fee rescue nil),(trade.received_payment rescue nil),(trade.timeout_action_time rescue nil),(trade.is_3D rescue nil),(trade.promotion rescue nil),(trade.got_promotion rescue nil),(trade.sku_properties_name rescue nil),(trade.account_id rescue nil),(trade.forecast_seller_id rescue nil),(trade.service_logistic_id rescue nil),(trade.deliver_bills_count rescue nil),(trade.is_notified rescue nil),(trade.has_property_memos rescue nil),(trade.has_onsite_service rescue nil),(trade.has_refund_orders rescue nil),(trade.has_invoice_info rescue nil),(trade.auto_merged_once rescue nil),(trade.is_auto_dispatch rescue nil),(trade.is_auto_deliver rescue nil),(trade.news rescue nil),(trade.parent_id rescue nil),(trade.parent_type rescue nil),(trade.operator_id rescue nil),(trade.operator_name rescue nil),(trade.merged_trade_ids rescue nil),(trade.merged_by_trade_id rescue nil),(trade.mergeable_id rescue nil),(trade.is_locked rescue nil),(trade.batch_sort_num rescue nil),(trade.alipay_last_modified_time rescue nil),(trade.alipay_payment rescue nil),(trade.pay_type rescue nil),(trade.vender_id rescue nil),(trade.order_seller_price rescue nil),(trade.delivery_type rescue nil),(trade.order_state_remark rescue nil),(trade.return_order rescue nil),(trade.sop_stock_out_time rescue nil),(trade.order_id rescue nil),(trade.receive_date rescue nil),(trade.pay_service_type rescue nil),(trade.order_promotion_discount rescue nil),(trade.update_time rescue nil),(trade.site_type rescue nil),(trade.order_coupon_discount rescue nil),(trade.order_platform_discount rescue nil),(trade.end_user_id rescue nil),(trade.product_amount rescue nil),(trade.refund_amount rescue nil),(trade.refund_code rescue nil),(trade.apply_date rescue nil),(trade.refund_status rescue nil),(trade.custom_type rescue nil),trade.main_trade_id]
    end
  end
  CSV.open("#{Rails.root}/orders.csv","wb") do |csv|
    csv << ["cs_memo", "color_num", "color_hexcode", "color_name", "barcode", "sku_color", "oid", "status", "iid", "title", "price", "num_iid", "item_meal_id", "item_meal_name", "sku_id", "num", "outer_sku_id", "total_fee", "payment", "discount_fee", "adjust_fee", "modified", "sku_properties_name", "refund_id", "is_oversold", "is_service_order", "end_time", "pic_path", "seller_nick", "buyer_nick", "refund_status", "outer_iid", "snapshot_url", "snapshot", "timeout_action_time", "buyer_rate", "seller_rate", "seller_type", "cid", "tid", "local_sku_id", "refund_fee", "order_gift_tid", "outer_id", "gift_point", "product_refund_num", "order_id", "order_item_id", "merchant_id", "original_price", "group_flag", "process_finish_date", "update_time", "delivery_fee_amount", "promotion_amount", "coupon_amount_merchant", "coupon_platform_discount", "subsidy_amount"]
    Trade.unscoped.all.each do |trade|
      p trade.tid
      trade.orders.each do |order|
        csv << [(order.cs_memo rescue nil), (order.color_num.join(",") rescue nil), (order.color_hexcode.join(",") rescue nil), (order.color_name.join(",") rescue nil), (order.barcode.join(",") rescue nil), (order.sku_color rescue nil), (order.oid rescue nil), (order.status rescue nil), (order.iid rescue nil), (order.title rescue nil), (order.price rescue nil), (order.num_iid rescue nil), (order.item_meal_id rescue nil), (order.item_meal_name rescue nil), (order.sku_id rescue nil), (order.num rescue nil), (order.outer_sku_id rescue nil), (order.total_fee rescue nil), (order.payment rescue nil), (order.discount_fee rescue nil), (order.adjust_fee rescue nil), (order.modified rescue nil), (order.sku_properties_name rescue nil), (order.refund_id rescue nil), (order.is_oversold rescue nil), (order.is_service_order rescue nil), (order.end_time rescue nil), (order.pic_path rescue nil), (order.seller_nick rescue nil), (order.buyer_nick rescue nil), (order.refund_status rescue nil), (order.outer_iid rescue nil), (order.snapshot_url rescue nil), (order.snapshot rescue nil), (order.timeout_action_time rescue nil), (order.buyer_rate rescue nil), (order.seller_rate rescue nil), (order.seller_type rescue nil), (order.cid rescue nil), (order.trade.tid rescue nil), (order.local_sku_id rescue nil), (order.refund_fee rescue nil), (order.order_gift_tid rescue nil), (order.outer_id rescue nil), (order.gift_point rescue nil), (order.product_refund_num rescue nil), (order.order_id rescue nil), (order.order_item_id rescue nil), (order.merchant_id rescue nil), (order.original_price rescue nil), (order.group_flag rescue nil), (order.process_finish_date rescue nil), (order.update_time rescue nil), (order.delivery_fee_amount rescue nil), (order.promotion_amount rescue nil), (order.coupon_amount_merchant rescue nil), (order.coupon_platform_discount rescue nil), (order.subsidy_amount rescue nil)]
      end
    end
  end
  CSV.open("#{Rails.root}/trade_property_memos.csv", "wb") do |csv|
    csv << ["id", "account_id", "outer_id", "tid", "oid"]
    Trade.unscoped.all.each do |trade|
      p trade.tid
      trade.trade_property_memos.each do |memo|
        oid = trade.orders.where(_id: memo.order_id).first.try(:oid)
        next if oid.blank?
        csv << [memo._id.to_s, memo.account_id, memo.outer_id, trade.tid, oid]
      end
    end
  end
  CSV.open("#{Rails.root}/property_values.csv", "wb") do |csv|
    csv << ["name", "value", "category_property_value_id", "trade_property_memo_id"]
    Trade.unscoped.all.each do |trade|
      p trade.tid
      trade.trade_property_memos.each do |memo|
        memo.property_values.each do |value|
          csv << [value.name, value.value, value.category_property_value_id, memo._id.to_s]
        end
      end
    end
  end
  CSV.open("#{Rails.root}/deliver_bills.csv", "wb") do |csv|
    csv << ["deliver_bill_number", "seller_id", "seller_name", "deliver_printed_at", "process_sheet_printed_at", "logistic_printed_at", "tid"]
    DeliverBill.all.each do |bill|
      p bill.deliver_bill_number
      csv << [bill.deliver_bill_number, bill.seller_id, bill.seller_name, bill.deliver_printed_at, bill.logistic_printed_at, bill.process_sheet_printed_at, bill.trade.tid]
    end
  end
  CSV.open("#{Rails.root}/stock_out_bill.csv", "wb") do |csv|
    csv << ["tid", "customer_id", "op_state", "op_city", "op_district", "op_address", "op_name", "website", "is_cash_sale", "op_mobile", "op_zip", "op_phone", "created_at", "checked_at", "stocked_at", "confirm_stocked_at", "confirm_failed_at", "canceled_at", "cancel_succeded_at", "cancel_failed_at", "failed_desc", "sync_at", "sync_succeded_at", "sync_failed_at", "stock_id", "stock_type", "remark", "account_id", "logistic_id", "seller_id", "operation", "operation_time", "status", "bill_products_mumber", "bill_products_real_mumber", "bill_products_price"]
    StockOutBill.each do |bill|
      p bill.tid
      csv << [bill.tid, bill.customer_id, bill.op_state, bill.op_city, bill.op_district, bill.op_address, bill.op_name, bill.website, bill.is_cash_sale, bill.op_mobile, bill.op_zip, bill.op_phone, bill.created_at, bill.checked_at, bill.stocked_at, bill.confirm_stocked_at, bill.confirm_failed_at, bill.canceled_at, bill.cancel_succeded_at, bill.cancel_failed_at, bill.failed_desc, bill.sync_at, bill.sync_succeded_at, bill.sync_failed_at, bill.stock_id, bill.stock_type, bill.remark, bill.account_id, bill.logistic_id, bill.seller_id, bill.operation, bill.operation_time, bill.status, bill.bill_products_mumber, bill.bill_products_real_mumber, bill.bill_products_price]
    end
  end
  CSV.open("#{Rails.root}/bill_products.csv", "wb") do |csv|
    csv << ["title", "outer_id", "outer_sku_id", "num_iid", "oid", "stock_product_id", "sku_id", "colors", "number", "real_number", "memo", "price", "total_price", "deliver_bill_number", "stock_out_bill_tid"]
    DeliverBill.all.each do |bill|
      p bill.deliver_bill_number
      bill.bill_products.each do |product|
        csv << [product.title, product.outer_id, product.outer_sku_id, product.num_iid, product.oid, product.stock_product_id, product.sku_id, product.colors.join(","), product.number, product.real_number, product.memo, product.price, product.total_price, bill.deliver_bill_number, nil]
      end
    end
    StockOutBill.all.each do |bill|
      p bill.tid
      bill.bill_products.each do |product|
        csv << [product.title, product.outer_id, product.outer_sku_id, product.num_iid, product.oid, product.stock_product_id, product.sku_id, product.colors.join(","), product.number, product.real_number, product.memo, product.price, product.total_price, nil, bill.tid]
      end
    end
  end
end